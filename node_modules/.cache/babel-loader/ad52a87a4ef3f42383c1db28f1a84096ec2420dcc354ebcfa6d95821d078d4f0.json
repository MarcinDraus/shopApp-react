{"ast":null,"code":"// import React, { useEffect } from 'react';\n// // eslint-disable-next-line no-unused-vars\n// import clsx from 'clsx';\n\n// import styles from './Product.module.scss';\n\n// import PropTypes from 'prop-types';\n// import { useState } from 'react';\n\n// import ProductImage from './ProductImage/ProductImage';\n// import ProductForm from './ProductFrom/ProductFrom';\n\n// const Product = ({ title, basePrice, colors, sizes, name }) => {\n//   const [currentColor, setCurrentColor] = useState(colors[0]);\n//   const [currentSize, setCurrentSize] = useState(sizes[0].name);\n\n//   const handlerColor = (color) => {\n//     setCurrentColor(color);\n//     console.log(color, 'color');\n//   };\n\n//   const handlerSize = (size) => {\n//     setCurrentSize(size);\n//   };\n\n//   const prepareColorClassName = (color) => {\n//     return styles['color' + color[0].toUpperCase() + color.substr(1).toLowerCase()];\n//   };\n\n//   const getPrice = () => {\n//     const selectedSize = sizes.find((size) => size.name === currentSize);\n//     if (selectedSize) {\n//       return basePrice + selectedSize.additionalPrice;\n//     }\n//     return basePrice;\n//   };\n\n//   // const summary = (e) => {\n//   //   e.preventDefault();\n//   //   const summaryData = {\n//   //     name: name,\n//   //     title: title,\n//   //     totalPrice: getPrice(),\n//   //     size: currentSize,\n//   //     color: currentColor,\n//   //   };\n//   //   console.log('summary', summary);\n//   //   console.log(summaryData, 'summaryData');\n//   // };\n//   // useEffect(() => {\n//   //   summary();\n//   // // eslint-disable-next-line react-hooks/exhaustive-deps\n//   // }, []); \n\n//   // eslint-disable-next-line no-unused-vars\n//   const shirtImageUrl = `${process.env.PUBLIC_URL}/images/products/shirt-${name}--${currentColor}.jpg`;\n\n//   return (\n//     <article className={styles.product}>\n//       <ProductImage name={name} title={title} currentColor={currentColor} />\n//       <div>\n//         <header>\n//           <h2 className={styles.name}>{title}</h2>\n//           <span className={styles.price}>Price: {getPrice()}$</span>\n//         </header>\n//         <ProductForm\n//           sizes={sizes}\n//           colors={colors}\n//           currentSize={currentSize}\n//           currentColor={currentColor}\n//           handlerSize={handlerSize}\n//           handlerColor={handlerColor}\n//           summary={summary}\n//           prepareColorClassName={prepareColorClassName}\n//         />\n//       </div>\n//     </article>\n//   );\n// };\n\n// Product.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   basePrice: PropTypes.number.isRequired,\n//   colors: PropTypes.array.isRequired,\n//   sizes: PropTypes.array.isRequired,\n//   name: PropTypes.string.isRequired,\n// };\n\n// export default Product;\n\n// import styles from './Product.module.scss';\n// import clsx from 'clsx';\n// import Button from '../Button/Button';\n// import PropTypes from 'prop-types';\n// import { useState } from 'react';\n\n// const Product = ({ title, basePrice, colors, sizes, name }) => {\n//   const [currentColor, setCurrentColor] = useState(colors[0]);\n//   const [currentSize, setCurrentSize] = useState(sizes[0].name);\n\n//   const handlerColor = (color) => {\n//     setCurrentColor(color);\n//     console.log(color, 'color');\n//   };\n\n//   const handlerSize = (size) => {\n//     setCurrentSize(size);\n//   };\n\n//   const prepareColorClassName = (color) => {\n//     return styles['color' + color[0].toUpperCase() + color.substr(1).toLowerCase()];\n//   };\n\n//   const getPrice = () => {\n//     const selectedSize = sizes.find((size) => size.name === currentSize);\n//     if (selectedSize) {\n//       return basePrice + selectedSize.additionalPrice;\n//     }\n//     return basePrice;\n//   };\n\n//   // eslint-disable-next-line no-unused-vars\n//   const [summaryInfo, setSummaryInfo] = useState(null);//skasowac\n\n//   const summary = (e) => {\n//     e.preventDefault();\n//     const summaryData = {\n//       name: name,\n//       title: title,\n//       totalPrice: getPrice(),\n//       size: currentSize,\n//       color: currentColor,\n//     };\n//     console.log(summary);\n//     console.log(summaryData);\n//   };\n\n//   const shirtImageUrl = `${process.env.PUBLIC_URL}/images/products/shirt-${name}--${currentColor}.jpg`;\n\n//   return (\n\n//     <article className={styles.product}>\n//       <div className={styles.imageContainer}>\n//         <img className={styles.image} alt={title} src={shirtImageUrl} />\n//       </div>\n//       <div>\n//         <header>\n//           <h2 className={styles.name}>{title}</h2>\n//           <span className={styles.price}>Price: {getPrice()}$</span>\n//         </header>\n//         <form>\n//           <div className={styles.sizes}>\n//             <h3 className={styles.optionLabel}>Sizes</h3>\n//             <ul className={styles.choices}>\n//               {sizes.map((size) => (\n//                 <li key={size.name}>\n//                   <button \n//                     type=\"button\"\n//                     className={clsx(currentSize === size.name && styles.active)}\n//                     onClick={() => handlerSize(size.name)}\n//                   >\n//                     {size.name}\n//                   </button>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//           <div className={styles.colors}>\n//             <h3 className={styles.optionLabel}>Colors</h3>\n//             <ul className={styles.choices}>\n//               {colors.map((color) => (\n//                 <li key={color}>\n//                   <button\n//                     type=\"button\"\n//                     className={clsx(\n//                       prepareColorClassName(color),\n//                       currentColor === color && styles.active\n//                     )}\n//                     onClick={() => handlerColor(color)}\n//                   ></button>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//           <Button className={styles.button} onClick={summary}>\n//             <span className=\"fa fa-shopping-cart\" />\n//           </Button>\n//         </form>\n//       </div>\n//     </article>\n//   );\n// };\n\n// Product.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   basePrice: PropTypes.number.isRequired,\n//   colors: PropTypes.array.isRequired,\n//   sizes: PropTypes.array.isRequired,\n//   name: PropTypes.string.isRequired,\n// };\n\n// export default Product;","map":{"version":3,"names":[],"sources":["/Users/marcin/Documents/Kodilla nauka programowania/React/SHOPAPP - product-personalizer-base/SHOPAPP/src/components/Product/Product.js"],"sourcesContent":["// import React, { useEffect } from 'react';\r\n// // eslint-disable-next-line no-unused-vars\r\n// import clsx from 'clsx';\r\n\r\n// import styles from './Product.module.scss';\r\n\r\n\r\n// import PropTypes from 'prop-types';\r\n// import { useState } from 'react';\r\n\r\n// import ProductImage from './ProductImage/ProductImage';\r\n// import ProductForm from './ProductFrom/ProductFrom';\r\n\r\n// const Product = ({ title, basePrice, colors, sizes, name }) => {\r\n//   const [currentColor, setCurrentColor] = useState(colors[0]);\r\n//   const [currentSize, setCurrentSize] = useState(sizes[0].name);\r\n\r\n//   const handlerColor = (color) => {\r\n//     setCurrentColor(color);\r\n//     console.log(color, 'color');\r\n//   };\r\n\r\n//   const handlerSize = (size) => {\r\n//     setCurrentSize(size);\r\n//   };\r\n\r\n//   const prepareColorClassName = (color) => {\r\n//     return styles['color' + color[0].toUpperCase() + color.substr(1).toLowerCase()];\r\n//   };\r\n\r\n//   const getPrice = () => {\r\n//     const selectedSize = sizes.find((size) => size.name === currentSize);\r\n//     if (selectedSize) {\r\n//       return basePrice + selectedSize.additionalPrice;\r\n//     }\r\n//     return basePrice;\r\n//   };\r\n\r\n//   // const summary = (e) => {\r\n//   //   e.preventDefault();\r\n//   //   const summaryData = {\r\n//   //     name: name,\r\n//   //     title: title,\r\n//   //     totalPrice: getPrice(),\r\n//   //     size: currentSize,\r\n//   //     color: currentColor,\r\n//   //   };\r\n//   //   console.log('summary', summary);\r\n//   //   console.log(summaryData, 'summaryData');\r\n//   // };\r\n//   // useEffect(() => {\r\n//   //   summary();\r\n//   // // eslint-disable-next-line react-hooks/exhaustive-deps\r\n//   // }, []); \r\n\r\n//   // eslint-disable-next-line no-unused-vars\r\n//   const shirtImageUrl = `${process.env.PUBLIC_URL}/images/products/shirt-${name}--${currentColor}.jpg`;\r\n\r\n//   return (\r\n//     <article className={styles.product}>\r\n//       <ProductImage name={name} title={title} currentColor={currentColor} />\r\n//       <div>\r\n//         <header>\r\n//           <h2 className={styles.name}>{title}</h2>\r\n//           <span className={styles.price}>Price: {getPrice()}$</span>\r\n//         </header>\r\n//         <ProductForm\r\n//           sizes={sizes}\r\n//           colors={colors}\r\n//           currentSize={currentSize}\r\n//           currentColor={currentColor}\r\n//           handlerSize={handlerSize}\r\n//           handlerColor={handlerColor}\r\n//           summary={summary}\r\n//           prepareColorClassName={prepareColorClassName}\r\n//         />\r\n//       </div>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// Product.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   basePrice: PropTypes.number.isRequired,\r\n//   colors: PropTypes.array.isRequired,\r\n//   sizes: PropTypes.array.isRequired,\r\n//   name: PropTypes.string.isRequired,\r\n// };\r\n\r\n// export default Product;\r\n\r\n// import styles from './Product.module.scss';\r\n// import clsx from 'clsx';\r\n// import Button from '../Button/Button';\r\n// import PropTypes from 'prop-types';\r\n// import { useState } from 'react';\r\n\r\n// const Product = ({ title, basePrice, colors, sizes, name }) => {\r\n//   const [currentColor, setCurrentColor] = useState(colors[0]);\r\n//   const [currentSize, setCurrentSize] = useState(sizes[0].name);\r\n\r\n//   const handlerColor = (color) => {\r\n//     setCurrentColor(color);\r\n//     console.log(color, 'color');\r\n//   };\r\n\r\n//   const handlerSize = (size) => {\r\n//     setCurrentSize(size);\r\n//   };\r\n\r\n//   const prepareColorClassName = (color) => {\r\n//     return styles['color' + color[0].toUpperCase() + color.substr(1).toLowerCase()];\r\n//   };\r\n\r\n//   const getPrice = () => {\r\n//     const selectedSize = sizes.find((size) => size.name === currentSize);\r\n//     if (selectedSize) {\r\n//       return basePrice + selectedSize.additionalPrice;\r\n//     }\r\n//     return basePrice;\r\n//   };\r\n\r\n//   // eslint-disable-next-line no-unused-vars\r\n//   const [summaryInfo, setSummaryInfo] = useState(null);//skasowac\r\n\r\n//   const summary = (e) => {\r\n//     e.preventDefault();\r\n//     const summaryData = {\r\n//       name: name,\r\n//       title: title,\r\n//       totalPrice: getPrice(),\r\n//       size: currentSize,\r\n//       color: currentColor,\r\n//     };\r\n//     console.log(summary);\r\n//     console.log(summaryData);\r\n//   };\r\n\r\n//   const shirtImageUrl = `${process.env.PUBLIC_URL}/images/products/shirt-${name}--${currentColor}.jpg`;\r\n\r\n//   return (\r\n\r\n\r\n    \r\n//     <article className={styles.product}>\r\n//       <div className={styles.imageContainer}>\r\n//         <img className={styles.image} alt={title} src={shirtImageUrl} />\r\n//       </div>\r\n//       <div>\r\n//         <header>\r\n//           <h2 className={styles.name}>{title}</h2>\r\n//           <span className={styles.price}>Price: {getPrice()}$</span>\r\n//         </header>\r\n//         <form>\r\n//           <div className={styles.sizes}>\r\n//             <h3 className={styles.optionLabel}>Sizes</h3>\r\n//             <ul className={styles.choices}>\r\n//               {sizes.map((size) => (\r\n//                 <li key={size.name}>\r\n//                   <button \r\n//                     type=\"button\"\r\n//                     className={clsx(currentSize === size.name && styles.active)}\r\n//                     onClick={() => handlerSize(size.name)}\r\n//                   >\r\n//                     {size.name}\r\n//                   </button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//           <div className={styles.colors}>\r\n//             <h3 className={styles.optionLabel}>Colors</h3>\r\n//             <ul className={styles.choices}>\r\n//               {colors.map((color) => (\r\n//                 <li key={color}>\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     className={clsx(\r\n//                       prepareColorClassName(color),\r\n//                       currentColor === color && styles.active\r\n//                     )}\r\n//                     onClick={() => handlerColor(color)}\r\n//                   ></button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           </div>\r\n//           <Button className={styles.button} onClick={summary}>\r\n//             <span className=\"fa fa-shopping-cart\" />\r\n//           </Button>\r\n//         </form>\r\n//       </div>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// Product.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   basePrice: PropTypes.number.isRequired,\r\n//   colors: PropTypes.array.isRequired,\r\n//   sizes: PropTypes.array.isRequired,\r\n//   name: PropTypes.string.isRequired,\r\n// };\r\n\r\n// export default Product;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}